name: Release
on:
  push:
    branches:
    - "**"
    tags:
    - 'v[0-9]*.[0-9]*.[0-9]*'

jobs:
  prepare:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v3

    # Check Versions
    - name: Check If Versions Match
      run: |
        # Ignore versions for now
        exit 0

        cargo_version=$(cargo pkgid | cut -d'#' -f 2)

        set -x
        test "${cargo_version}"   = "${GITHUB_REF_NAME#v}"

  build:
    needs: prepare
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        target:
        #- aarch64-unknown-linux-musl
        #- i686-unknown-linux-musl
        - x86_64-unknown-linux-musl
        #- armv7-unknown-linux-musleabihf
        #- i686-pc-windows-gnu
        #- x86_64-pc-windows-gnu
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/rust-build
      name: Build
      with:
        target: ${{ matrix.target }}
        use-cross: true

  build-apple:
    needs: prepare
    runs-on: 'macos-latest'
    strategy:
      matrix:
        target:
        - x86_64-apple-darwin
        - aarch64-apple-darwin
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/rust-build
      name: Build
      with:
        target: ${{ matrix.target }}
        use-cross: false

  release:
    needs:
    - build
    - build-apple
    runs-on: 'ubuntu-latest'

    steps:
    - uses: withlazers/release-action@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "*"
